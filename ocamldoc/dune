;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*                     Thomas Refis, Jane Street Europe                   *
;*                                                                        *
;*   Copyright 2018 Jane Street Group LLC                                 *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(ocamllex  odoc_lexer odoc_ocamlhtml odoc_see_lexer odoc_text_lexer)
(ocamlyacc odoc_parser odoc_text_parser)

(library
  (name odoc_lib)
  (modes byte native)
  (wrapped false)
  (flags (:standard -nostdlib -w -9-32))
  (modules
    odoc_analyse
    odoc_args
    odoc_ast
    odoc_class
    odoc_comments
    odoc_comments_global
    odoc_config
    odoc_control
    odoc_cross
    odoc_dag2html
    odoc_dep
    odoc_dot
    odoc_env
    odoc_exception
    odoc_extension
    odoc_gen
    odoc_global
    odoc_html
    odoc_info
    odoc_inherit
    odoc_latex
    odoc_latex_style
    odoc_lexer
    odoc_man
    odoc_merge
    odoc_messages
    odoc_misc
    odoc_module
    odoc_name
    odoc_ocamlhtml
    odoc_parameter
    odoc_parser
    odoc_print
    odoc_scan
    odoc_search
    odoc_see_lexer
    odoc_sig
    odoc_str
    odoc_test
    odoc_texi
    odoc_text
    odoc_text_lexer
    odoc_text_parser
    odoc_to_text
    odoc_type
    odoc_types
    odoc_value
  )
  (libraries dynlink ocamlcommon stdlib str unix))

(executable
  (name odoc_byte)
  (modes byte)
  ; See note in the toplevel dune file about this.
  (flags (:standard -cclib "-L ../runtime" -cclib -lcamlrun))
  (modules odoc_byte)
  (libraries odoc_lib))

(rule
  (targets odoc_byte.ml)
  (action (copy odoc.ml %{targets})))

(executable
  (name odoc_native)
  (modes native)
  (modules odoc_native)
  (libraries odoc_lib runtime_native))

(rule
  (targets odoc_native.ml)
  (action (copy odoc.ml %{targets})))

(install
  (files
    (odoc_byte.bc as ocamldoc.byte)
    (odoc_native.exe as ocamldoc)
    (odoc_native.exe as ocamldoc.opt)
  )
  (section bin)
  (package ocaml))
