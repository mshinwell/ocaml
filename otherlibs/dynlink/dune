;**************************************************************************
;*                                                                        *
;*                                 OCaml                                  *
;*                                                                        *
;*           Mark Shinwell and Thomas Refis, Jane Street Europe           *
;*                                                                        *
;*   Copyright 2018--2020 Jane Street Group LLC                           *
;*                                                                        *
;*   All rights reserved.  This file is distributed under the terms of    *
;*   the GNU Lesser General Public License version 2.1, with the          *
;*   special exception on linking described in the file LICENSE.          *
;*                                                                        *
;**************************************************************************

(library
  (name dynlink_compilerlibs)
  (wrapped true)
  (modes byte native)
  (modules
    config
    build_path_prefix_map
    misc
    identifiable
    numbers
    arg_helper
    clflags
    profile
    consistbl
    terminfo
    warnings
    load_path
    int_replace_polymorphic_compare
    location
    longident
    docstrings
    syntaxerr
    ast_helper
    ast_mapper
    attr_helper
    builtin_attributes
    ident
    path
    primitive
    type_immediacy
    types
    btype
    subst
    predef
    datarepr
    cmi_format
    persistent_env
    env
    debuginfo
    lambda
    runtimedef
    instruct
    opcodes
    bytesections
    dll
    meta
    symtable
    ; The following are .mli-only in the source tree, but owing to a bug in
    ; Dune, we can't declare them as [modules_without_implementation] as the
    ; [copy_files] stanza fails to be triggered.  Instead we rename them to
    ; .ml during the copy (see below).
    asttypes
    parsetree
    outcometree
    cmo_format
    cmxs_format)
  (libraries stdlib))

(install
  (files
    dynlink_compilerlibs.cmxa
    dynlink_compilerlibs.a
  )
  (section lib)
  (package ocaml))

;; .ml:
(copy_files %{project_root}/utils/config.ml)
(copy_files %{project_root}/utils/build_path_prefix_map.ml)
(copy_files %{project_root}/utils/misc.ml)
(copy_files %{project_root}/utils/identifiable.ml)
(copy_files %{project_root}/utils/numbers.ml)
(copy_files %{project_root}/utils/arg_helper.ml)
(copy_files %{project_root}/utils/clflags.ml)
(copy_files %{project_root}/utils/profile.ml)
(copy_files %{project_root}/utils/consistbl.ml)
(copy_files %{project_root}/utils/terminfo.ml)
(copy_files %{project_root}/utils/warnings.ml)
(copy_files %{project_root}/utils/load_path.ml)
(copy_files %{project_root}/utils/int_replace_polymorphic_compare.ml)
(copy_files %{project_root}/parsing/location.ml)
(copy_files %{project_root}/parsing/longident.ml)
(copy_files %{project_root}/parsing/docstrings.ml)
(copy_files %{project_root}/parsing/syntaxerr.ml)
(copy_files %{project_root}/parsing/ast_helper.ml)
(copy_files %{project_root}/parsing/ast_mapper.ml)
(copy_files %{project_root}/parsing/attr_helper.ml)
(copy_files %{project_root}/parsing/builtin_attributes.ml)
(copy_files %{project_root}/typing/ident.ml)
(copy_files %{project_root}/typing/path.ml)
(copy_files %{project_root}/typing/primitive.ml)
(copy_files %{project_root}/typing/type_immediacy.ml)
(copy_files %{project_root}/typing/types.ml)
(copy_files %{project_root}/typing/btype.ml)
(copy_files %{project_root}/typing/subst.ml)
(copy_files %{project_root}/typing/predef.ml)
(copy_files %{project_root}/typing/datarepr.ml)
(copy_files %{project_root}/file_formats/cmi_format.ml)
(copy_files %{project_root}/typing/persistent_env.ml)
(copy_files %{project_root}/typing/env.ml)
(copy_files %{project_root}/lambda/debuginfo.ml)
(copy_files %{project_root}/lambda/lambda.ml)
(copy_files %{project_root}/lambda/runtimedef.ml)
(copy_files %{project_root}/bytecomp/instruct.ml)
(copy_files %{project_root}/bytecomp/opcodes.ml)
(copy_files %{project_root}/bytecomp/bytesections.ml)
(copy_files %{project_root}/bytecomp/dll.ml)
(copy_files %{project_root}/bytecomp/meta.ml)
(copy_files %{project_root}/bytecomp/symtable.ml)

;; .mli:
(copy_files %{project_root}/utils/config.mli)
(copy_files %{project_root}/utils/build_path_prefix_map.mli)
(copy_files %{project_root}/utils/misc.mli)
(copy_files %{project_root}/utils/identifiable.mli)
(copy_files %{project_root}/utils/numbers.mli)
(copy_files %{project_root}/utils/arg_helper.mli)
(copy_files %{project_root}/utils/clflags.mli)
(copy_files %{project_root}/utils/profile.mli)
(copy_files %{project_root}/utils/consistbl.mli)
(copy_files %{project_root}/utils/terminfo.mli)
(copy_files %{project_root}/utils/warnings.mli)
(copy_files %{project_root}/utils/load_path.mli)
(copy_files %{project_root}/utils/int_replace_polymorphic_compare.mli)
(copy_files %{project_root}/parsing/location.mli)
(copy_files %{project_root}/parsing/longident.mli)
(copy_files %{project_root}/parsing/docstrings.mli)
(copy_files %{project_root}/parsing/syntaxerr.mli)
(copy_files %{project_root}/parsing/ast_helper.mli)
(copy_files %{project_root}/parsing/ast_mapper.mli)
(copy_files %{project_root}/parsing/attr_helper.mli)
(copy_files %{project_root}/parsing/builtin_attributes.mli)
(copy_files %{project_root}/typing/ident.mli)
(copy_files %{project_root}/typing/path.mli)
(copy_files %{project_root}/typing/primitive.mli)
(copy_files %{project_root}/typing/type_immediacy.mli)
(copy_files %{project_root}/typing/types.mli)
(copy_files %{project_root}/typing/btype.mli)
(copy_files %{project_root}/typing/subst.mli)
(copy_files %{project_root}/typing/predef.mli)
(copy_files %{project_root}/typing/datarepr.mli)
(copy_files %{project_root}/file_formats/cmi_format.mli)
(copy_files %{project_root}/typing/persistent_env.mli)
(copy_files %{project_root}/typing/env.mli)
(copy_files %{project_root}/lambda/debuginfo.mli)
(copy_files %{project_root}/lambda/lambda.mli)
(copy_files %{project_root}/lambda/runtimedef.mli)
(copy_files %{project_root}/bytecomp/instruct.mli)
(copy_files %{project_root}/bytecomp/opcodes.mli)
(copy_files %{project_root}/bytecomp/bytesections.mli)
(copy_files %{project_root}/bytecomp/dll.mli)
(copy_files %{project_root}/bytecomp/meta.mli)
(copy_files %{project_root}/bytecomp/symtable.mli)

;; .mli-only, which are copied to .ml, as described above:
(rule
  (targets asttypes.ml)
  (deps %{project_root}/parsing/asttypes.mli)
  (action (copy %{project_root}/parsing/asttypes.mli %{targets})))
(rule
  (targets parsetree.ml)
  (deps %{project_root}/parsing/parsetree.mli)
  (action (copy %{project_root}/parsing/parsetree.mli %{targets})))
(rule
  (targets outcometree.ml)
  (deps %{project_root}/typing/outcometree.mli)
  (action (copy %{project_root}/typing/outcometree.mli %{targets})))
(rule
  (targets cmo_format.ml)
  (deps %{project_root}/file_formats/cmo_format.mli)
  (action (copy %{project_root}/file_formats/cmo_format.mli %{targets})))
(rule
  (targets cmxs_format.ml)
  (deps %{project_root}/file_formats/cmxs_format.mli)
  (action (copy %{project_root}/file_formats/cmxs_format.mli %{targets})))

(library
  (name dynlink)
  (wrapped false)
  (modes byte native)
  (modules dynlink dynlink_common dynlink_types dynlink_platform_intf)
  (libraries dynlink_compilerlibs stdlib))

(install
  (files
    .dynlink.objs/native/dynlink_common.cmx
    .dynlink.objs/native/dynlink_platform_intf.cmx
    .dynlink.objs/native/dynlink_types.cmx
    dynlink.cmxa
    dynlink.a
    dynlink.cmxs
  )
  (section lib)
  (package ocaml))
